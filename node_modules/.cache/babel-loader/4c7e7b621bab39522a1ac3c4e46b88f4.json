{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Context/StarWarsProvider.js\";\nimport { shape } from 'prop-types';\nimport React, { useState } from 'react';\nimport getPlanetsStarWars from '../Services/fetchAPI';\nimport StarWarsContext from './StarWarsContext';\n\nconst StarWarsProvider = ({\n  children\n}) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState({\n    filterByName: {\n      name: ''\n    },\n    filterByNumericValues: []\n  });\n  const [columnValue, setColumnValue] = useState({\n    column: filterColumn,\n    comparison: filterComparison,\n    value: Number(filterNumber)\n  });\n\n  const fetchPlanetsStarWars = async () => {\n    const {\n      results\n    } = await getPlanetsStarWars();\n    results.forEach(element => delete element.residents);\n    setData(results);\n  };\n\n  const context = {\n    data,\n    fetchPlanetsStarWars,\n    setFilterName,\n    filterName,\n    filterColumn,\n    setFilterColumn,\n    filterComparison,\n    setFilterComparison,\n    filterNumber,\n    setFilterNumber\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nStarWarsProvider.propTypes = {\n  children: shape().isRequired\n};\nexport default StarWarsProvider;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Context/StarWarsProvider.js"],"names":["shape","React","useState","getPlanetsStarWars","StarWarsContext","StarWarsProvider","children","data","setData","filterName","setFilterName","filterNumber","setFilterNumber","filterByName","name","filterByNumericValues","columnValue","setColumnValue","column","filterColumn","comparison","filterComparison","value","Number","fetchPlanetsStarWars","results","forEach","element","residents","context","setFilterColumn","setFilterComparison","propTypes","isRequired"],"mappings":";AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC/CW,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM,KADiC;AAI/CC,IAAAA,qBAAqB,EAAE;AAJwB,GAAD,CAAhD;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAC7CgB,IAAAA,MAAM,EAAEC,YADqC;AAE7CC,IAAAA,UAAU,EAAEC,gBAFiC;AAG7CC,IAAAA,KAAK,EAAEC,MAAM,CAACZ,YAAD;AAHgC,GAAD,CAA9C;;AAMA,QAAMa,oBAAoB,GAAG,YAAY;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMtB,kBAAkB,EAA5C;AACAsB,IAAAA,OAAO,CAACC,OAAR,CAAiBC,OAAD,IAAa,OAAOA,OAAO,CAACC,SAA5C;AACApB,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACD,GAJD;;AAMA,QAAMI,OAAO,GAAG;AACdtB,IAAAA,IADc;AAEdiB,IAAAA,oBAFc;AAGdd,IAAAA,aAHc;AAIdD,IAAAA,UAJc;AAKdU,IAAAA,YALc;AAMdW,IAAAA,eANc;AAOdT,IAAAA,gBAPc;AAQdU,IAAAA,mBARc;AASdpB,IAAAA,YATc;AAUdC,IAAAA;AAVc,GAAhB;AAaA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGiB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,QADH,CADF;AAKD,CAvCD;;AAyCAD,gBAAgB,CAAC2B,SAAjB,GAA6B;AAC3B1B,EAAAA,QAAQ,EAAEN,KAAK,GAAGiC;AADS,CAA7B;AAIA,eAAe5B,gBAAf","sourcesContent":["import { shape } from 'prop-types';\nimport React, { useState } from 'react';\nimport getPlanetsStarWars from '../Services/fetchAPI';\nimport StarWarsContext from './StarWarsContext';\n\nconst StarWarsProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n  });\n  const [columnValue, setColumnValue] = useState({\n    column: filterColumn,\n    comparison: filterComparison,\n    value: Number(filterNumber),\n  });\n\n  const fetchPlanetsStarWars = async () => {\n    const { results } = await getPlanetsStarWars();\n    results.forEach((element) => delete element.residents);\n    setData(results);\n  };\n\n  const context = {\n    data,\n    fetchPlanetsStarWars,\n    setFilterName,\n    filterName,\n    filterColumn,\n    setFilterColumn,\n    filterComparison,\n    setFilterComparison,\n    filterNumber,\n    setFilterNumber,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children }\n    </StarWarsContext.Provider>\n  );\n};\n\nStarWarsProvider.propTypes = {\n  children: shape().isRequired,\n};\n\nexport default StarWarsProvider;\n"]},"metadata":{},"sourceType":"module"}