{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    filters\n  } = useContext(StarWarsContext);\n  const [planets, setPlanets] = useState([]);\n  const [action, setAction] = useState(false);\n  useEffect(() => {\n    setPlanets(data);\n  }, [data]);\n\n  const renderHeader = () => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"URL\"));\n\n  const renderBody = list => list.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, planet.url)));\n\n  const filterByName = () => {\n    const {\n      filterByName: {\n        name\n      }\n    } = filters;\n    const listByName = data.filter(planet => planet.name.match(name) && planet.name);\n    return listByName;\n  };\n\n  const filtersByNumber = listPlanets => {\n    const {\n      value,\n      column,\n      comparison\n    } = filters.filterByNumericValues[0];\n    console.log(listPlanets);\n    return listPlanets.filter(planet => {\n      if (comparison === 'igual a') return Number(planet[column]) === Number(value);\n      if (comparison === 'menor que') return Number(planet[column]) < Number(value);\n      if (comparison === 'maior que') return Number(planet[column]) > Number(value);\n    });\n  };\n\n  const handleClickFilter = () => {\n    filtersByNumber(filterByName());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FiltersComponent, {\n    handleClickFilter: handleClickFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderBody(filtersByNumber(filterByName())))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx"],"names":["React","useContext","useEffect","useState","StarWarsContext","FiltersComponent","Table","data","filters","planets","setPlanets","action","setAction","renderHeader","renderBody","list","map","planet","index","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","filterByName","listByName","filter","match","filtersByNumber","listPlanets","value","column","comparison","filterByNumericValues","console","log","Number","handleClickFilter"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const { data, filters } = useContext(StarWarsContext);\n  const [planets, setPlanets] = useState([]);\n  const [action, setAction] = useState(false);\n\n  useEffect(() => {\n    setPlanets(data);\n  }, [data]);\n\n  const renderHeader = () => (\n    <tr>\n      <th>Name</th>\n      <th>Rotation Period</th>\n      <th>Orbital Period</th>\n      <th>diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface Water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>URL</th>\n    </tr>\n  );\n\n  const renderBody = (list) => (\n    list.map((planet, index) => (\n      <tr key={ index }>\n        <td data-testid=\"planet-name\">{ planet.name }</td>\n        <td>{ planet.rotation_period }</td>\n        <td>{ planet.orbital_period }</td>\n        <td>{ planet.diameter }</td>\n        <td>{ planet.climate }</td>\n        <td>{ planet.gravity }</td>\n        <td>{ planet.terrain }</td>\n        <td>{ planet.surface_water }</td>\n        <td>{ planet.population }</td>\n        <td>{ planet.films }</td>\n        <td>{ planet.created }</td>\n        <td>{ planet.edited }</td>\n        <td>{ planet.url }</td>\n      </tr>\n    ))\n  );\n\n  const filterByName = () => {\n    const { filterByName: { name } } = filters;\n    const listByName = data.filter((planet) => planet.name.match(name) && planet.name);\n    return listByName;\n  };\n\n  const filtersByNumber = (listPlanets) => {\n    const { value, column, comparison } = filters.filterByNumericValues[0];\n    console.log(listPlanets);\n    return listPlanets.filter((planet) => {\n      if (comparison === 'igual a') return Number(planet[column]) === Number(value);\n      if (comparison === 'menor que') return Number(planet[column]) < Number(value);\n      if (comparison === 'maior que') return Number(planet[column]) > Number(value);\n    });\n  };\n\n  const handleClickFilter = () => {\n    filtersByNumber(filterByName());\n  };\n\n  return (\n    <>\n      <FiltersComponent\n        handleClickFilter={ handleClickFilter }\n      />\n      <table>\n        <tbody>\n          { renderHeader() }\n          { renderBody(filtersByNumber(filterByName())) }\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}