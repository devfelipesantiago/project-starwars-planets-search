{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Context/StarWarsProvider.js\";\nimport { shape } from 'prop-types';\nimport React, { useState } from 'react';\nimport getPlanetsStarWars from '../Services/fetchAPI';\nimport StarWarsContext from './StarWarsContext';\n\nconst StarWarsProvider = ({\n  children\n}) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState({\n    filterByName: {\n      name: ''\n    },\n    filterByNumericValues: []\n  });\n  const [columnValue, setColumnValue] = useState({\n    column: '',\n    comparison: '',\n    value: 0\n  });\n\n  const fetchPlanetsStarWars = async () => {\n    const {\n      results\n    } = await getPlanetsStarWars();\n    results.forEach(element => delete element.residents);\n    setData(results);\n  };\n\n  const context = {\n    data,\n    fetchPlanetsStarWars,\n    setFilterName,\n    filterName,\n    filterColumn,\n    setFilterColumn,\n    filterComparison,\n    setFilterComparison,\n    filterNumber,\n    setFilterNumber\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nStarWarsProvider.propTypes = {\n  children: shape().isRequired\n};\nexport default StarWarsProvider;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Context/StarWarsProvider.js"],"names":["shape","React","useState","getPlanetsStarWars","StarWarsContext","StarWarsProvider","children","data","setData","filterName","setFilterName","filterNumber","setFilterNumber","filterByName","name","filterByNumericValues","columnValue","setColumnValue","column","comparison","value","fetchPlanetsStarWars","results","forEach","element","residents","context","filterColumn","setFilterColumn","filterComparison","setFilterComparison","propTypes","isRequired"],"mappings":";AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC/CW,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM,KADiC;AAI/CC,IAAAA,qBAAqB,EAAE;AAJwB,GAAD,CAAhD;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAC7CgB,IAAAA,MAAM,EAAE,EADqC;AAE7CC,IAAAA,UAAU,EAAE,EAFiC;AAG7CC,IAAAA,KAAK,EAAE;AAHsC,GAAD,CAA9C;;AAMA,QAAMC,oBAAoB,GAAG,YAAY;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMnB,kBAAkB,EAA5C;AACAmB,IAAAA,OAAO,CAACC,OAAR,CAAiBC,OAAD,IAAa,OAAOA,OAAO,CAACC,SAA5C;AACAjB,IAAAA,OAAO,CAACc,OAAD,CAAP;AACD,GAJD;;AAMA,QAAMI,OAAO,GAAG;AACdnB,IAAAA,IADc;AAEdc,IAAAA,oBAFc;AAGdX,IAAAA,aAHc;AAIdD,IAAAA,UAJc;AAKdkB,IAAAA,YALc;AAMdC,IAAAA,eANc;AAOdC,IAAAA,gBAPc;AAQdC,IAAAA,mBARc;AASdnB,IAAAA,YATc;AAUdC,IAAAA;AAVc,GAAhB;AAaA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGc,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,QADH,CADF;AAKD,CAvCD;;AAyCAD,gBAAgB,CAAC0B,SAAjB,GAA6B;AAC3BzB,EAAAA,QAAQ,EAAEN,KAAK,GAAGgC;AADS,CAA7B;AAIA,eAAe3B,gBAAf","sourcesContent":["import { shape } from 'prop-types';\nimport React, { useState } from 'react';\nimport getPlanetsStarWars from '../Services/fetchAPI';\nimport StarWarsContext from './StarWarsContext';\n\nconst StarWarsProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n  });\n  const [columnValue, setColumnValue] = useState({\n    column: '',\n    comparison: '',\n    value: 0,\n  });\n\n  const fetchPlanetsStarWars = async () => {\n    const { results } = await getPlanetsStarWars();\n    results.forEach((element) => delete element.residents);\n    setData(results);\n  };\n\n  const context = {\n    data,\n    fetchPlanetsStarWars,\n    setFilterName,\n    filterName,\n    filterColumn,\n    setFilterColumn,\n    filterComparison,\n    setFilterComparison,\n    filterNumber,\n    setFilterNumber,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children }\n    </StarWarsContext.Provider>\n  );\n};\n\nStarWarsProvider.propTypes = {\n  children: shape().isRequired,\n};\n\nexport default StarWarsProvider;\n"]},"metadata":{},"sourceType":"module"}