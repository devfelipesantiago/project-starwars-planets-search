{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    filters,\n    planets,\n    setPlanets\n  } = useContext(StarWarsContext);\n  useEffect(() => {\n    setPlanets([...data]);\n  }, [data]);\n  useEffect(() => {\n    const {\n      filterByName: {\n        name\n      }\n    } = filters;\n    filterByName();\n  }, [name]);\n\n  const renderHeader = () => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"URL\"));\n\n  const renderBody = list => list.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, planet.url)));\n\n  const filterByName = () => {\n    const {\n      filterByName: {\n        name\n      }\n    } = filters;\n    setPlanets(planets.filter(planet => planet.name.match(name) && planet.name));\n    filterByName();\n  };\n\n  const filtersByBiggerThen = () => {\n    const {\n      column,\n      value\n    } = filters.filterByNumericValues[0];\n    return data.filter(planet => Number(planet[column]) > value);\n  };\n\n  const filtersByLessThen = () => {\n    const {\n      column,\n      value\n    } = filters.filterByNumericValues[0];\n    return data.filter(planet => Number(planet[column]) < value);\n  };\n\n  const filtersByIqualTo = () => {\n    const {\n      column = 0,\n      value\n    } = filters.filterByNumericValues[0];\n    return data.filter(planet => planet[column] === value);\n  };\n\n  const handleClickFilter = () => {\n    console.log('click'); // const { comparison } = filters.filterByNumericValues[0];\n    // if (comparison === 'igual a') return filtersByIqualTo();\n    // if (comparison === 'menor que') return filtersByLessThen();\n    // if (comparison === 'maior que') return filtersByBiggerThen();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FiltersComponent, {\n    handleClickFilter: handleClickFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderBody(planets))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx"],"names":["React","useContext","useEffect","StarWarsContext","FiltersComponent","Table","data","filters","planets","setPlanets","filterByName","name","renderHeader","renderBody","list","map","planet","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","filter","match","filtersByBiggerThen","column","value","filterByNumericValues","Number","filtersByLessThen","filtersByIqualTo","handleClickFilter","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    filters,\n    planets,\n    setPlanets,\n  } = useContext(StarWarsContext);\n\n  useEffect(() => {\n    setPlanets([...data]);\n  }, [data]);\n\n  useEffect(() => {\n    const { filterByName: { name } } = filters;\n    filterByName();\n  }, [name]);\n\n  const renderHeader = () => (\n    <tr>\n      <th>Name</th>\n      <th>Rotation Period</th>\n      <th>Orbital Period</th>\n      <th>diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface Water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>URL</th>\n    </tr>\n  );\n\n  const renderBody = (list) => (\n    list.map((planet, index) => (\n      <tr key={ index }>\n        <td data-testid=\"planet-name\">{ planet.name }</td>\n        <td>{ planet.rotation_period }</td>\n        <td>{ planet.orbital_period }</td>\n        <td>{ planet.diameter }</td>\n        <td>{ planet.climate }</td>\n        <td>{ planet.gravity }</td>\n        <td>{ planet.terrain }</td>\n        <td>{ planet.surface_water }</td>\n        <td>{ planet.population }</td>\n        <td>{ planet.films }</td>\n        <td>{ planet.created }</td>\n        <td>{ planet.edited }</td>\n        <td>{ planet.url }</td>\n      </tr>\n    ))\n  );\n\n  const filterByName = () => {\n    const { filterByName: { name } } = filters;\n    setPlanets(planets.filter((planet) => planet.name.match(name) && planet.name));\n    filterByName();\n  };\n\n  const filtersByBiggerThen = () => {\n    const { column, value } = filters.filterByNumericValues[0];\n    return data.filter((planet) => Number(planet[column]) > value);\n  };\n\n  const filtersByLessThen = () => {\n    const { column, value } = filters.filterByNumericValues[0];\n    return data.filter((planet) => Number(planet[column]) < value);\n  };\n\n  const filtersByIqualTo = () => {\n    const { column = 0, value } = filters.filterByNumericValues[0];\n    return data.filter((planet) => planet[column] === value);\n  };\n\n  const handleClickFilter = () => {\n    console.log('click');\n    // const { comparison } = filters.filterByNumericValues[0];\n    // if (comparison === 'igual a') return filtersByIqualTo();\n    // if (comparison === 'menor que') return filtersByLessThen();\n    // if (comparison === 'maior que') return filtersByBiggerThen();\n  };\n\n  return (\n    <>\n      <FiltersComponent\n        handleClickFilter={ handleClickFilter }\n      />\n      <table>\n        <tbody>\n          { renderHeader() }\n          { renderBody(planets) }\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}