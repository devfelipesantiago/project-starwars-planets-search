{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx\";\nimport React, { useContext, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const {\n    setFilters,\n    filters\n  } = useContext(StarWarsContext);\n  const [activeFilter, setActiveFilter] = useState([]);\n  const [valueFilter, setValueFilter] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0\n  });\n  const [columns, setColumns] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  const getValueInput = ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    setFilters({ ...filters,\n      filterByName: {\n        name: value\n      }\n    });\n  };\n\n  const getValuesNumberInput = ({\n    target\n  }) => {\n    const {\n      value,\n      name\n    } = target;\n    setValueFilter({ ...valueFilter,\n      [name]: value\n    });\n  };\n\n  const handleClickFilter = () => {\n    setFilters({ ...filters,\n      filterByNumericValues: [...filters.filterByNumericValues, valueFilter]\n    });\n  };\n\n  const removeColumn = ({\n    column\n  }) => {\n    setColumns(columns.filter(item => item !== column));\n    if (column) setActiveFilter([...activeFilter, column]);\n  };\n\n  const handleClickActiveFilter = ({\n    target: {\n      name\n    }\n  }) => {\n    filters.filterByNumericValues.filter(filter => filter !== name);\n    setColumns([...columns, ...activeFilter.filter(filter => filter === name)]);\n    setActiveFilter(activeFilter.filter(filter => filter !== name));\n  };\n\n  const buttonActiveFilter = () => filters.filterByNumericValues.map(({\n    column\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"filter\",\n    key: `${column}-filter-button`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, column, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    name: column,\n    onClick: e => handleClickActiveFilter(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"X\")));\n\n  const renderFilters = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"colums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Colunas:\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"column\",\n    id: \"colums\",\n    value: valueFilter.column,\n    \"data-testid\": \"column-filter\",\n    onChange: e => getValuesNumberInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, columns.map(col => /*#__PURE__*/React.createElement(\"option\", {\n    key: col,\n    value: col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, col)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Compara\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"comparison\",\n    id: \"comparison\",\n    \"data-testid\": \"comparison-filter\",\n    onChange: e => getValuesNumberInput(e),\n    value: valueFilter.comparison,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"value\",\n    id: \"value-filter\",\n    \"data-testid\": \"value-filter\",\n    placeholder: \"Digite um numero\",\n    onChange: e => getValuesNumberInput(e),\n    value: valueFilter.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Planeta:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ask\",\n    id: \"ask\",\n    \"data-testid\": \"name-filter\",\n    placeholder: \"Digite o planeta\",\n    onChange: e => getValueInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), renderFilters(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      handleClickFilter();\n      removeColumn(valueFilter);\n    },\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"), activeFilter.length > 0 && buttonActiveFilter());\n};\n\nexport default FiltersComponent;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx"],"names":["React","useContext","useState","StarWarsContext","FiltersComponent","setFilters","filters","activeFilter","setActiveFilter","valueFilter","setValueFilter","column","comparison","value","columns","setColumns","getValueInput","target","filterByName","name","getValuesNumberInput","handleClickFilter","filterByNumericValues","removeColumn","filter","item","handleClickActiveFilter","buttonActiveFilter","map","e","renderFilters","col","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const {\n    setFilters,\n    filters } = useContext(StarWarsContext);\n\n  const [activeFilter, setActiveFilter] = useState([]);\n  const [valueFilter, setValueFilter] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n  const [columns, setColumns] = useState([\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  const getValueInput = ({ target }) => {\n    const { value } = target;\n    setFilters({ ...filters, filterByName: { name: value } });\n  };\n\n  const getValuesNumberInput = ({ target }) => {\n    const { value, name } = target;\n    setValueFilter({ ...valueFilter, [name]: value });\n  };\n\n  const handleClickFilter = () => {\n    setFilters({\n      ...filters,\n      filterByNumericValues: [\n        ...filters.filterByNumericValues, valueFilter],\n    });\n  };\n\n  const removeColumn = ({ column }) => {\n    setColumns(columns.filter((item) => item !== column));\n    if (column) setActiveFilter([...activeFilter, column]);\n  };\n\n  const handleClickActiveFilter = ({ target: { name } }) => {\n    filters.filterByNumericValues.filter((filter) => filter !== name);\n    setColumns([...columns, ...activeFilter.filter((filter) => filter === name)]);\n    setActiveFilter(activeFilter.filter((filter) => filter !== name));\n  };\n\n  const buttonActiveFilter = () => (\n    filters.filterByNumericValues.map(({ column }) => (\n      <span data-testid=\"filter\" key={ `${column}-filter-button` }>\n        { column }\n        <button\n          type=\"button\"\n          name={ column }\n          onClick={ (e) => handleClickActiveFilter(e) }\n        >\n          X\n        </button>\n      </span>\n    ))\n  );\n\n  const renderFilters = () => (\n    <>\n      <label htmlFor=\"colums\">\n        Colunas:\n        <select\n          name=\"column\"\n          id=\"colums\"\n          value={ valueFilter.column }\n          data-testid=\"column-filter\"\n          onChange={ (e) => getValuesNumberInput(e) }\n        >\n          { columns.map((col) => (\n            <option key={ col } value={ col }>{ col }</option>\n          )) }\n        </select>\n      </label>\n      <label htmlFor=\"comparison\">\n        Comparação\n        <select\n          name=\"comparison\"\n          id=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ (e) => getValuesNumberInput(e) }\n          value={ valueFilter.comparison }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"value-filter\"\n          data-testid=\"value-filter\"\n          placeholder=\"Digite um numero\"\n          onChange={ (e) => getValuesNumberInput(e) }\n          value={ valueFilter.value }\n        />\n      </label>\n    </>\n  );\n\n  return (\n    <form>\n      <label htmlFor=\"ask\">\n        Planeta:\n        <input\n          type=\"text\"\n          name=\"ask\"\n          id=\"ask\"\n          data-testid=\"name-filter\"\n          placeholder=\"Digite o planeta\"\n          onChange={ (e) => getValueInput(e) }\n        />\n      </label>\n      {renderFilters() }\n      <button\n        onClick={ () => { handleClickFilter(); removeColumn(valueFilter); } }\n        type=\"button\"\n        data-testid=\"button-filter\"\n      >\n        Filtrar\n      </button>\n      { activeFilter.length > 0 && buttonActiveFilter() }\n    </form>\n  );\n};\n\nexport default FiltersComponent;\n"]},"metadata":{},"sourceType":"module"}