{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const {\n    data,\n    setFilters,\n    filters,\n    planets,\n    setPlanets,\n    filterByNames,\n    filtersByNumber,\n    handleClickFilter\n  } = useContext(StarWarsContext);\n  const [activeFilter, setActiveFilter] = useState([]);\n  const [filterSelected, setFilterSelected] = useState({\n    column: '',\n    comparison: '',\n    value: ''\n  });\n  const [columns, setColumns] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  const getValueInput = ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    setFilters({ ...filters,\n      filterByName: {\n        name: value\n      }\n    });\n  };\n\n  const getValuesNumberInput = ({\n    target\n  }) => {\n    const {\n      value,\n      name\n    } = target;\n    setFilterSelected({\n      [name]: value\n    });\n  };\n\n  const removeColumn = column => {\n    setColumns(columns.filter(item => item !== column));\n    if (column) setActiveFilter([...activeFilter, column]);\n  };\n\n  const handleClickActiveFilter = ({\n    target: {\n      name\n    }\n  }) => {\n    setColumns([...columns, ...activeFilter.filter(filter => filter === name)]);\n    setActiveFilter(activeFilter.filter(filter => filter !== name));\n    setColumnValue({});\n  };\n\n  const buttonActiveFilter = () => activeFilter.map(name => /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"filter\",\n    key: `${name}-filter-button`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, name, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    name: name,\n    onClick: e => handleClickActiveFilter(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"X\")));\n\n  const renderFilters = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"colums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Colunas:\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"column\",\n    id: \"colums\",\n    \"data-testid\": \"column-filter\",\n    onChange: e => getValuesNumberInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, columns.map(col => /*#__PURE__*/React.createElement(\"option\", {\n    key: col,\n    value: col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, col)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Compara\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"comparison\",\n    id: \"comparison\",\n    \"data-testid\": \"comparison-filter\",\n    onChange: e => getValuesNumberInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"value\",\n    id: \"value-filter\",\n    \"data-testid\": \"value-filter\",\n    placeholder: \"Digite um numero\",\n    onChange: e => getValuesNumberInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Planeta:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ask\",\n    id: \"ask\",\n    \"data-testid\": \"name-filter\",\n    placeholder: \"Digite o planeta\",\n    onChange: e => {\n      getValueInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), renderFilters(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const {\n        name\n      } = filterByName;\n      const {\n        column\n      } = columnValue;\n      handleClickFilter(name);\n      removeColumn(column);\n    },\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"), activeFilter.length > 0 && buttonActiveFilter());\n};\n\nFiltersComponent.propTypes = {\n  handleClickFilter: PropTypes.func\n}.isRequired;\nexport default FiltersComponent;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx"],"names":["PropTypes","React","useContext","useState","StarWarsContext","FiltersComponent","data","setFilters","filters","planets","setPlanets","filterByNames","filtersByNumber","handleClickFilter","activeFilter","setActiveFilter","filterSelected","setFilterSelected","column","comparison","value","columns","setColumns","getValueInput","target","filterByName","name","getValuesNumberInput","removeColumn","filter","item","handleClickActiveFilter","setColumnValue","buttonActiveFilter","map","e","renderFilters","col","columnValue","length","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const {\n    data,\n    setFilters,\n    filters,\n    planets,\n    setPlanets,\n    filterByNames,\n    filtersByNumber,\n    handleClickFilter } = useContext(StarWarsContext);\n\n  const [activeFilter, setActiveFilter] = useState([]);\n  const [filterSelected, setFilterSelected] = useState({\n    column: '',\n    comparison: '',\n    value: '',\n  });\n  const [columns, setColumns] = useState([\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  const getValueInput = ({ target }) => {\n    const { value } = target;\n    setFilters({ ...filters, filterByName: { name: value } });\n  };\n\n  const getValuesNumberInput = ({ target }) => {\n    const { value, name } = target;\n    setFilterSelected({ [name]: value });\n  };\n\n  const removeColumn = (column) => {\n    setColumns(columns.filter((item) => item !== column));\n    if (column) setActiveFilter([...activeFilter, column]);\n  };\n\n  const handleClickActiveFilter = ({ target: { name } }) => {\n    setColumns([...columns, ...activeFilter.filter((filter) => filter === name)]);\n    setActiveFilter(activeFilter.filter((filter) => filter !== name));\n    setColumnValue({});\n  };\n\n  const buttonActiveFilter = () => (\n    activeFilter.map((name) => (\n      <span data-testid=\"filter\" key={ `${name}-filter-button` }>\n        { name }\n        <button\n          type=\"button\"\n          name={ name }\n          onClick={ (e) => handleClickActiveFilter(e) }\n        >\n          X\n        </button>\n      </span>\n    ))\n  );\n\n  const renderFilters = () => (\n    <>\n      <label htmlFor=\"colums\">\n        Colunas:\n        <select\n          name=\"column\"\n          id=\"colums\"\n          data-testid=\"column-filter\"\n          onChange={ (e) => getValuesNumberInput(e) }\n        >\n          { columns.map((col) => (\n            <option key={ col } value={ col }>{ col }</option>\n          )) }\n        </select>\n      </label>\n      <label htmlFor=\"comparison\">\n        Comparação\n        <select\n          name=\"comparison\"\n          id=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ (e) => getValuesNumberInput(e) }\n        >\n          <option value=\"\"> </option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"value-filter\"\n          data-testid=\"value-filter\"\n          placeholder=\"Digite um numero\"\n          onChange={ (e) => getValuesNumberInput(e) }\n        />\n      </label>\n    </>\n  );\n\n  return (\n    <form>\n      <label htmlFor=\"ask\">\n        Planeta:\n        <input\n          type=\"text\"\n          name=\"ask\"\n          id=\"ask\"\n          data-testid=\"name-filter\"\n          placeholder=\"Digite o planeta\"\n          onChange={ (e) => { getValueInput(e); } }\n        />\n      </label>\n      {renderFilters() }\n      <button\n        onClick={ () => {\n          const { name } = filterByName;\n          const { column } = columnValue;\n          handleClickFilter(name);\n          removeColumn(column);\n        } }\n        type=\"button\"\n        data-testid=\"button-filter\"\n      >\n        Filtrar\n      </button>\n      { activeFilter.length > 0 && buttonActiveFilter() }\n    </form>\n  );\n};\n\nFiltersComponent.propTypes = {\n  handleClickFilter: PropTypes.func,\n}.isRequired;\n\nexport default FiltersComponent;\n"]},"metadata":{},"sourceType":"module"}