{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx\";\nimport React, { useContext } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const {\n    setFilterName,\n    setFilterColumn\n  } = useContext(StarWarsContext);\n\n  const getvalueInput = ({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    setFilterName(value);\n  };\n\n  const renderFilters = () =>\n  /*#__PURE__*/\n  // O primeiro deve abrir um dropdown que permita a quem usa selecionar uma das seguintes colunas: population, orbital_period, diameter, rotation_period e surface_water.Deve ser uma tag select com a propriedade data - testid='column-filter';\n  // O segundo deve determinar se a faixa de valor será maior que, menor que ou igual a o numero que virá a seguir.Uma tag select com a propriedade data - testid='comparison-filter';\n  // O terceiro deve ser uma caixa de texto que só aceita números.Essa caixa deve ser uma tag input com a propriedade data - testid='value-filter';\n  React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Planeta:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ask\",\n    id: \"ask\",\n    \"data-testid\": \"name-filter\",\n    placeholder: \"Digite o planeta\",\n    onChange: e => getvalueInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"colums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Colunas:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"population\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"orbital_period\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"rotation_period\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"surface_water\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Compara\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n\n  return renderFilters();\n};\n\nexport default FiltersComponent;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Filters.jsx"],"names":["React","useContext","StarWarsContext","FiltersComponent","setFilterName","setFilterColumn","getvalueInput","target","value","renderFilters","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAqCJ,UAAU,CAACC,eAAD,CAArD;;AAEA,QAAMI,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAH,IAAAA,aAAa,CAACI,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG;AAAA;AACpB;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,EAAE,EAAC,KAHL;AAIE,mBAAY,aAJd;AAKE,IAAA,WAAW,EAAC,kBALd;AAME,IAAA,QAAQ,EAAIC,CAAD,IAAOJ,aAAa,CAACI,CAAD,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEA;AAAQ,mBAAY,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CAFA,CAZF,eAsBE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CAJF;;AAkCA,SACED,aAAa,EADf;AAGD,CA7CD;;AA+CA,eAAeN,gBAAf","sourcesContent":["import React, { useContext } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\n\nconst FiltersComponent = () => {\n  const { setFilterName, setFilterColumn } = useContext(StarWarsContext);\n\n  const getvalueInput = ({ target }) => {\n    const { value } = target;\n    setFilterName(value);\n  };\n\n  const renderFilters = () => (\n    // O primeiro deve abrir um dropdown que permita a quem usa selecionar uma das seguintes colunas: population, orbital_period, diameter, rotation_period e surface_water.Deve ser uma tag select com a propriedade data - testid='column-filter';\n    // O segundo deve determinar se a faixa de valor será maior que, menor que ou igual a o numero que virá a seguir.Uma tag select com a propriedade data - testid='comparison-filter';\n    // O terceiro deve ser uma caixa de texto que só aceita números.Essa caixa deve ser uma tag input com a propriedade data - testid='value-filter';\n    <form>\n      <label htmlFor=\"ask\">\n        Planeta:\n        <input\n          type=\"text\"\n          name=\"ask\"\n          id=\"ask\"\n          data-testid=\"name-filter\"\n          placeholder=\"Digite o planeta\"\n          onChange={ (e) => getvalueInput(e) }\n        />\n      </label>\n      <label htmlFor=\"colums\">\n        Colunas:\n      <select data-testid=\"column-filter\">\n          <option>population</option>\n          <option>orbital_period</option>\n          <option>diameter</option>\n          <option>rotation_period</option>\n          <option>surface_water</option>\n        </select>\n      </label>\n      <label htmlFor=\"\">Comparação\n        <select>\n\n        </select>\n      </label>\n    </form>\n  );\n\n  return (\n    renderFilters()\n  );\n};\n\nexport default FiltersComponent;\n"]},"metadata":{},"sourceType":"module"}