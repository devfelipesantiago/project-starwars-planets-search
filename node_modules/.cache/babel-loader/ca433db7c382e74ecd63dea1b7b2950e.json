{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    fetchPlanetsStarWars,\n    filterName,\n    filterColumn,\n    filterComparison,\n    filterNumber\n  } = useContext(StarWarsContext);\n  useEffect(() => {\n    fetchPlanetsStarWars();\n  }, []);\n  const FILTER = {\n    filters: {\n      filterByName: {\n        name: filterName\n      },\n      filterByNumericValues: [{\n        column: filterColumn,\n        comparison: filterComparison,\n        value: filterNumber\n      }]\n    }\n  };\n\n  const renderHeader = () => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"URL\"));\n\n  const renderBody = list => {\n    console.log(list);\n    return list.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      \"data-testid\": \"planet-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, planet.url)));\n  };\n\n  const filtersByName = () => {\n    const {\n      filters: {\n        filterByName: {\n          name\n        }\n      }\n    } = FILTER;\n    return data.filter(planet => planet.name.match(name) && planet.name);\n  };\n\n  const filtersByBiggerThen = () => {\n    const {\n      column,\n      value\n    } = FILTER.filters.filterByNumericValues[0];\n    return data.filter(planet => planet[column] < value);\n  };\n\n  const filtersByLessThen = () => {\n    const {\n      column,\n      value\n    } = FILTER.filters.filterByNumericValues[0];\n    return data.filter(planet => planet[column] > value);\n  };\n\n  const filtersByIqualTo = () => {\n    const {\n      column,\n      value\n    } = FILTER.filters.filterByNumericValues[0];\n    return data.filter(planet => planet[column] === value);\n  };\n\n  const handleClickFilter = () => {\n    const {\n      comparison\n    } = FILTER.filters.filterByNumericValues[0];\n    if (comparison === 'menor que') return filtersByLessThen();\n    if (comparison === 'maior que') return filtersByBiggerThen();\n    if (comparison === 'igual a') return filtersByIqualTo();\n  };\n\n  console.log(filtersByName());\n\n  const renderWithFilters = () => {\n    if (filterName) {\n      console.log(filterName);\n      renderBody(filtersByName());\n    }\n\n    if (handleClickFilter()) {\n      renderBody(handleClickFilter());\n    } else {\n      return renderBody(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FiltersComponent, {\n    handleClickFilter: handleClickFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderWithFilters())));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx"],"names":["React","useContext","useEffect","StarWarsContext","FiltersComponent","Table","data","fetchPlanetsStarWars","filterName","filterColumn","filterComparison","filterNumber","FILTER","filters","filterByName","name","filterByNumericValues","column","comparison","value","renderHeader","renderBody","list","console","log","map","planet","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","filtersByName","filter","match","filtersByBiggerThen","filtersByLessThen","filtersByIqualTo","handleClickFilter","renderWithFilters"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    fetchPlanetsStarWars,\n    filterName,\n    filterColumn,\n    filterComparison,\n    filterNumber } = useContext(StarWarsContext);\n\n  useEffect(() => {\n    fetchPlanetsStarWars();\n  }, []);\n\n  const FILTER = {\n    filters:\n    {\n      filterByName: {\n        name: filterName,\n      },\n      filterByNumericValues: [\n        {\n          column: filterColumn,\n          comparison: filterComparison,\n          value: filterNumber,\n        },\n      ],\n    },\n  };\n\n  const renderHeader = () => (\n    <tr>\n      <th>Name</th>\n      <th>Rotation Period</th>\n      <th>Orbital Period</th>\n      <th>diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface Water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>URL</th>\n    </tr>\n  );\n\n  const renderBody = (list) => {\n    console.log(list);\n    return list.map((planet, index) => (\n      <tr key={ index }>\n        <td data-testid=\"planet-name\">{ planet.name }</td>\n        <td>{ planet.rotation_period }</td>\n        <td>{ planet.orbital_period }</td>\n        <td>{ planet.diameter }</td>\n        <td>{ planet.climate }</td>\n        <td>{ planet.gravity }</td>\n        <td>{ planet.terrain }</td>\n        <td>{ planet.surface_water }</td>\n        <td>{ planet.population }</td>\n        <td>{ planet.films }</td>\n        <td>{ planet.created }</td>\n        <td>{ planet.edited }</td>\n        <td>{ planet.url }</td>\n      </tr>\n    ));\n  };\n\n  const filtersByName = () => {\n    const { filters: { filterByName: { name } } } = FILTER;\n    return data\n      .filter((planet) => planet.name.match(name) && planet.name);\n  };\n\n  const filtersByBiggerThen = () => {\n    const { column, value } = FILTER.filters.filterByNumericValues[0];\n    return data\n      .filter((planet) => planet[column] < value);\n  };\n\n  const filtersByLessThen = () => {\n    const { column, value } = FILTER.filters.filterByNumericValues[0];\n    return data\n      .filter((planet) => planet[column] > value);\n  };\n\n  const filtersByIqualTo = () => {\n    const { column, value } = FILTER.filters.filterByNumericValues[0];\n    return data\n      .filter((planet) => planet[column] === value);\n  };\n\n  const handleClickFilter = () => {\n    const { comparison } = FILTER.filters.filterByNumericValues[0];\n    if (comparison === 'menor que') return filtersByLessThen();\n    if (comparison === 'maior que') return filtersByBiggerThen();\n    if (comparison === 'igual a') return filtersByIqualTo();\n  };\n\n  console.log(filtersByName());\n\n  const renderWithFilters = () => {\n    if (filterName) {\n      console.log(filterName);\n      renderBody(filtersByName());\n    }\n    if (handleClickFilter()) {\n      renderBody(handleClickFilter());\n    } else {\n      return renderBody(data);\n    }\n  };\n\n  return (\n    <>\n      <FiltersComponent handleClickFilter={ handleClickFilter } />\n      <table>\n        <tbody>\n          { renderHeader() }\n          { renderWithFilters() }\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}