{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    fetchPlanetsStarWars,\n    filterName,\n    filterColumn,\n    filterComparison,\n    filterNumber\n  } = useContext(StarWarsContext);\n  useEffect(() => {\n    fetchPlanetsStarWars();\n    console.log(FILTER);\n  }, []);\n  const FILTER = {\n    filters: {\n      filterByName: {\n        name: filterName\n      },\n      filterByNumericValues: [{\n        column: filterColumn,\n        comparison: filterComparison,\n        value: filterNumber\n      }]\n    }\n  };\n\n  const renderHeader = () => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"URL\"));\n\n  const renderBody = list => list.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, planet.url)));\n\n  const filtersByName = () => {\n    const {\n      filters: {\n        filterByName: {\n          name\n        }\n      }\n    } = FILTER;\n    return data.filter(planet => planet.name.match(name) && planet.name);\n  };\n\n  const filtersByPopulation = () => {\n    const {\n      comparison\n    } = FILTER.filters.filterByNumericValue[0]; // return data\n    //   .filter((planet) => planet.population.match(comparison) && planet.population);\n  };\n\n  console.log(filtersByPopulation());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FiltersComponent, {\n    filtersByPopulation: filtersByPopulation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, renderHeader(), filterName ? renderBody(filtersByName()) : renderBody(data))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-starwars-planets-search/src/Components/Table.jsx"],"names":["React","useContext","useEffect","StarWarsContext","FiltersComponent","Table","data","fetchPlanetsStarWars","filterName","filterColumn","filterComparison","filterNumber","console","log","FILTER","filters","filterByName","name","filterByNumericValues","column","comparison","value","renderHeader","renderBody","list","map","planet","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","filtersByName","filter","match","filtersByPopulation","filterByNumericValue"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport StarWarsContext from '../Context/StarWarsContext';\nimport FiltersComponent from './Filters';\n\nconst Table = () => {\n  const {\n    data,\n    fetchPlanetsStarWars,\n    filterName,\n    filterColumn,\n    filterComparison,\n    filterNumber } = useContext(StarWarsContext);\n\n  useEffect(() => {\n    fetchPlanetsStarWars();\n    console.log(FILTER);\n  }, []);\n\n  const FILTER = {\n    filters:\n    {\n      filterByName: {\n        name: filterName,\n      },\n      filterByNumericValues: [\n        {\n          column: filterColumn,\n          comparison: filterComparison,\n          value: filterNumber,\n        },\n      ],\n    },\n  };\n\n  const renderHeader = () => (\n    <tr>\n      <th>Name</th>\n      <th>Rotation Period</th>\n      <th>Orbital Period</th>\n      <th>diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface Water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>URL</th>\n    </tr>\n  );\n\n  const renderBody = (list) => (\n    list.map((planet, index) => (\n      <tr key={ index }>\n        <td data-testid=\"planet-name\">{ planet.name }</td>\n        <td>{ planet.rotation_period }</td>\n        <td>{ planet.orbital_period }</td>\n        <td>{ planet.diameter }</td>\n        <td>{ planet.climate }</td>\n        <td>{ planet.gravity }</td>\n        <td>{ planet.terrain }</td>\n        <td>{ planet.surface_water }</td>\n        <td>{ planet.population }</td>\n        <td>{ planet.films }</td>\n        <td>{ planet.created }</td>\n        <td>{ planet.edited }</td>\n        <td>{ planet.url }</td>\n      </tr>\n    ))\n  );\n\n  const filtersByName = () => {\n    const { filters: { filterByName: { name } } } = FILTER;\n    return data\n      .filter((planet) => planet.name.match(name) && planet.name);\n  };\n\n  const filtersByPopulation = () => {\n    const { comparison } = FILTER.filters.filterByNumericValue[0];\n    // return data\n    //   .filter((planet) => planet.population.match(comparison) && planet.population);\n  };\n\n  console.log(filtersByPopulation());\n\n  return (\n    <>\n      <FiltersComponent filtersByPopulation={ filtersByPopulation } />\n      <table>\n        <tbody>\n          { renderHeader() }\n          { filterName ? renderBody(filtersByName()) : renderBody(data) }\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}